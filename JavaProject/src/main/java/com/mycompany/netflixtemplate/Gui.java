package com.mycompany.netflixtemplate;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author wojte
 */
public class Gui extends javax.swing.JFrame {
    private Simulation simulation;
    private Boolean running;
    public Simulation getSimulation() {
        return simulation;
    }

    public void setSimulation(Simulation simulation) {
        this.simulation = simulation;
    }
    public Boolean getRunning() {
        return running;
    }

    public void setRunning(Boolean running) {
        this.running = running;
    }
    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
        running=false;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        userText1 = new javax.swing.JTextArea();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        startSimulationButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        resumeButton = new javax.swing.JButton();
        startLoaded = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        userList = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        userText = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        channelList = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        channelText = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        videoText = new javax.swing.JTextArea();
        videoList = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        streamList = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        streamText = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        inputEntity = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();

        userText1.setColumns(20);
        userText1.setRows(5);
        userText1.setText("Here will appear the info about the user");
        jScrollPane2.setViewportView(userText1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startSimulationButton.setText("Start new simulation");
        startSimulationButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startSimulationButtonMouseClicked(evt);
            }
        });

        stopButton.setText("Stop simulation");
        stopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopButtonMouseClicked(evt);
            }
        });

        resumeButton.setText("Resume simulation");
        resumeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resumeButtonMouseClicked(evt);
            }
        });

        startLoaded.setText("Resume loaded simulation");
        startLoaded.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startLoadedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startSimulationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resumeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startLoaded, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(521, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(startSimulationButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stopButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resumeButton)
                .addGap(18, 18, 18)
                .addComponent(startLoaded)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Simulation", jPanel1);

        userList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        userList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userListActionPerformed(evt);
            }
        });

        userText.setColumns(20);
        userText.setRows(5);
        userText.setText("Here will appear the info about the user");
        jScrollPane1.setViewportView(userText);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(userList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(userList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Users", jPanel2);

        channelList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        channelList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                channelListActionPerformed(evt);
            }
        });

        channelText.setColumns(20);
        channelText.setRows(5);
        channelText.setText("Here will appear the info about the channel");
        channelText.setWrapStyleWord(true);
        jScrollPane3.setViewportView(channelText);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(channelList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(channelList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Channels", jPanel3);

        videoText.setColumns(20);
        videoText.setRows(5);
        videoText.setText("Here will appear the info about the video");
        jScrollPane4.setViewportView(videoText);

        videoList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        videoList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                videoListMouseClicked(evt);
            }
        });
        videoList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                videoListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(videoList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(videoList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Videos", jPanel4);

        streamList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        streamList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                streamListMouseClicked(evt);
            }
        });
        streamList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streamListActionPerformed(evt);
            }
        });

        streamText.setColumns(20);
        streamText.setRows(5);
        streamText.setText("Here will appear the info about the streams\n");
        jScrollPane5.setViewportView(streamText);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(streamList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(streamList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Streams", jPanel5);

        searchButton.setText("Search");
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(inputEntity, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputEntity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addContainerGap(207, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Search", jPanel6);

        saveButton.setText("Save current state of simulation");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });

        loadButton.setText("Load state of simulation");
        loadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(286, 286, 286)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(334, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(saveButton)
                .addGap(18, 18, 18)
                .addComponent(loadButton)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Load/Save", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 816, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 299, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private DefaultComboBoxModel getUsers(){
        if(this.simulation==null){
            return null;
        }
        List<String> userNames = new ArrayList<>();
        if(this.simulation.getUsers()==null){
            System.out.println("Get some users first!");
            System.exit(0);
        }
        for (User user : simulation.getUsers()){
            userNames.add(user.getUserName());
        }

        DefaultComboBoxModel userListModel = new DefaultComboBoxModel<>();
        for (String user : userNames) {
            userListModel.addElement(user);
        }
        return userListModel;
    }
    
    private DefaultComboBoxModel getChannels(){
        if(this.simulation==null){
            return null;
        }
        List<String> channelNames = new ArrayList<>();
        if(this.simulation.getChannels()==null){
            System.out.println("Get some channels first!");
            System.exit(0);
        }
        for (Channel channel : simulation.getChannels()){
            channelNames.add(channel.getUserName());
        }

        DefaultComboBoxModel channelListModel = new DefaultComboBoxModel<>();
        for (String channel : channelNames) {
            channelListModel.addElement(channel);
        }
        return channelListModel;
    }
    
    private DefaultComboBoxModel getVideos(){
        if(this.simulation==null){
            return null;
        }
        List<String> videoNames = new ArrayList<>();
        if(this.simulation.getVideos()==null){
            System.out.println("Get some videos first!");
            System.exit(0);
        }
        for (Video video : simulation.getVideos()){
            videoNames.add(video.getVideoName());
        }

        DefaultComboBoxModel videoListModel = new DefaultComboBoxModel<>();
        for (String video : videoNames) {
            videoListModel.addElement(video);
        }
        return videoListModel;
    }
    
    private DefaultComboBoxModel getStreams(){
        if(this.simulation==null){
            return null;
        }
        List<String> streamNames = new ArrayList<>();
        if(this.simulation.getStreams()==null){
            System.out.println("Get some streams first!");
            System.exit(0);
        }
        for (Stream stream : simulation.getStreams()){
            streamNames.add(stream.getVideoName());
        }

        DefaultComboBoxModel streamListModel = new DefaultComboBoxModel<>();
        for (String stream : streamNames) {
            streamListModel.addElement(stream);
        }
        return streamListModel;
    }
    
    public void updateVideosList(){
        synchronized(this.simulation){
            String video=this.videoList.getSelectedItem().toString();
            videoList.setModel(getVideos());
            videoList.setSelectedItem(video);
        }
    }
    
    public void updateStreamList(){
        synchronized(this.simulation){
            String stream=this.streamList.getSelectedItem().toString();
            streamList.setModel(getStreams());
            streamList.setSelectedItem(stream);
        }

    }
    
    
    private void startSimulationButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startSimulationButtonMouseClicked
        if (simulation == null) {
            simulation = new Simulation();
            running=true;
            simulation.setTime(-1);
            simulation.setIsStopped(false);
            simulation.createObjects();
            simulation.setGui(this);
            userList.setModel(getUsers());
            channelList.setModel(getChannels());
            videoList.setModel(getVideos());
            streamList.setModel(getStreams());
            Thread simulationThread = new Thread(() -> {
                try {
                    simulation.startSimulation();
                } catch (InterruptedException ex) {
                    throw new RuntimeException(ex);
                }
            });

            simulationThread.start();
        }
    }//GEN-LAST:event_startSimulationButtonMouseClicked

    private void stopButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseClicked
        if (simulation != null) {
            simulation.setIsStopped(true);
        }
    }//GEN-LAST:event_stopButtonMouseClicked

    private void userListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userListActionPerformed
        String user=userList.getSelectedItem().toString();
        if(simulation!=null){
            User selectedUser=simulation.searchUserByName(user);
            String info=selectedUser.getInfo();
            userText.setText(info);
        }

    }//GEN-LAST:event_userListActionPerformed

    private void resumeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resumeButtonMouseClicked
        if (simulation!=null){
            simulation.setIsStopped(false);
        }
    }//GEN-LAST:event_resumeButtonMouseClicked

    private void channelListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_channelListActionPerformed
        String channel=channelList.getSelectedItem().toString();
        if(simulation!=null){
            Channel selectedChannel=simulation.searchChannelByName(channel);
            String info=selectedChannel.getInfo();
            channelText.setText(info);
        }
    }//GEN-LAST:event_channelListActionPerformed

    private void videoListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_videoListActionPerformed
        String video=videoList.getSelectedItem().toString();
        if(simulation!=null){
            synchronized(this.simulation){
                Video selectedVideo=simulation.searchVideoByName(video);
                String info=selectedVideo.getInfo();
                videoText.setText(info);
                simulation.setIsStopped(false);
            }
        }
    }//GEN-LAST:event_videoListActionPerformed

    private void videoListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_videoListMouseClicked
       if(simulation!=null){
           simulation.setIsStopped(true);
       }
    }//GEN-LAST:event_videoListMouseClicked

    private void streamListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streamListActionPerformed
        String stream=streamList.getSelectedItem().toString();
        if(simulation!=null){
            synchronized(this.simulation){
                Stream selectedStream=simulation.searchStreamByName(stream);
                String info=selectedStream.getInfo();
                streamText.setText(info);
                simulation.setIsStopped(false);
            }
        }
    }//GEN-LAST:event_streamListActionPerformed

    private void streamListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_streamListMouseClicked
        if(simulation!=null){
           simulation.setIsStopped(true);
       }
    }//GEN-LAST:event_streamListMouseClicked

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        String name=inputEntity.getText();
        String info="";
        if(this.simulation!=null){
            synchronized(this.simulation){
                info=simulation.getEntityByName(name)+"\n";
                info+="State of the object at time "+simulation.getTime();
                JOptionPane.showMessageDialog(this, info, "Information", JOptionPane.INFORMATION_MESSAGE);               
            }
        }else{
            JOptionPane.showMessageDialog(this, "Create simulation first!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_searchButtonMouseClicked

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
        if(this.simulation!=null){
            this.simulation.setIsStopped(true);
            try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("data.ser"))) {
                out.writeObject(this.simulation);
            } catch (IOException e) {
                e.printStackTrace();
            }
            this.simulation.setIsStopped(false);
        }
    }//GEN-LAST:event_saveButtonMouseClicked

    private void loadButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadButtonMouseClicked
        if(this.simulation==null){
            try (ObjectInputStream in = new ObjectInputStream(new FileInputStream("data.ser"))) {
                this.simulation =  (Simulation) in.readObject();
            } catch (IOException | ClassNotFoundException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_loadButtonMouseClicked

    private void startLoadedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startLoadedActionPerformed
      if (this.simulation!=null && running==false){
//        running=true;
        simulation.setGui(this);
        simulation.setStartTime(simulation.getTime()+1);
        userList.setModel(getUsers());
        channelList.setModel(getChannels());
        videoList.setModel(getVideos());
        streamList.setModel(getStreams());
        Thread simulationThread = new Thread(() -> {
            try {
                simulation.startSimulation();
            } catch (InterruptedException ex) {
                throw new RuntimeException(ex);
            }
        });

        simulationThread.start();
      }
    }//GEN-LAST:event_startLoadedActionPerformed
    
    public void updateVideoInfo(){
        String video=videoList.getSelectedItem().toString();
        if(simulation!=null){
            Video selectedVideo=simulation.searchVideoByName(video);
            String info=selectedVideo.getInfo();
            videoText.setText(info);
        }
    }
    
    public void updateStreamInfo(){
        String stream=streamList.getSelectedItem().toString();
        if(simulation!=null){
            Stream selectedStream=simulation.searchStreamByName(stream);
            String info=selectedStream.getInfo();
            streamText.setText(info);
        }
    }
    
    
    public void updateChannelInfo(){
        String channel=channelList.getSelectedItem().toString();
        if(simulation!=null){
            Channel selectedChannel=simulation.searchChannelByName(channel);
            String info=selectedChannel.getInfo();
            channelText.setText(info);
        }
    }
    
    public void updateUserInfo(){
        String user=userList.getSelectedItem().toString();
        if(simulation!=null){
            User selectedUser=simulation.searchUserByName(user);
            String info=selectedUser.getInfo();
            userText.setText(info);
        }
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> channelList;
    private javax.swing.JTextArea channelText;
    private javax.swing.JTextField inputEntity;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton resumeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton startLoaded;
    private javax.swing.JButton startSimulationButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JComboBox<String> streamList;
    private javax.swing.JTextArea streamText;
    private javax.swing.JComboBox<String> userList;
    private javax.swing.JTextArea userText;
    private javax.swing.JTextArea userText1;
    private javax.swing.JComboBox<String> videoList;
    private javax.swing.JTextArea videoText;
    // End of variables declaration//GEN-END:variables
}
